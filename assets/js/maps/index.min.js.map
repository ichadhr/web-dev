{"version":3,"sources":["index.js"],"names":["jQuery","document","ready","$","Centerify","elem","options","onResize","self","windowHeight","window","height","centerOnSegment","percentage","isAnimating","done","off","scrollEvent","unbind","bodyAndHeadEl","get","scrollTop","e","which","type","stop","bind","clearTimeout","onScrollTimer","animate","Math","round","speed","this","$elem","$sections","children","count","length","wait","setTimeout","toFixed","fn","centerify","each","data","Drawify","SVGEl","el","image","previousElementSibling","current_frame","total_frames","path","Array","handle","init","getViewportH","client","docElem","inner","getPageHeight","max","scrollY","pageYOffset","getOffset","offsetTop","offsetLeft","isNaN","offsetParent","top","left","inViewport","h","elH","offsetHeight","scrolled","viewed","elTop","elBottom","highlightDot","fullHeight","viewportHeight","position","fakePosition","current","$dots","removeClass","eq","addClass","documentElement","$body","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","prototype","slice","call","querySelectorAll","forEach","i","l","getTotalLength","style","strokeDasharray","strokeDashoffset","render","rendered","draw","next","progress","showImage","j","len","floor","resizeTimeout","svgs","svgArr","didScroll","svg","parentNode","click","index","scrollHandler","scrollPage","resizeHandler","delayed","addEventListener","drawify"],"mappings":"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","file":"../index.min.js","sourcesContent":["jQuery(document).ready(function ($) {\n\n  (function() {\n    function Centerify(elem, options) {\n      var self = this;\n\n      self.$elem = $(elem);\n      self.$sections = self.$elem.children('section');\n      self.isAnimating = false;\n      self.bodyAndHeadEl = $('body');\n      self.count = self.$sections.length;\n      self.speed = 100;\n      self.wait = 500;\n\n      init();\n\n      function init() {\n        onResize();\n      }\n\n      function onResize() {\n        self.windowHeight = $(window).height();\n      }\n\n      function centerOnSegment(percentage) {\n        if (!percentage) {\n          return;\n        }\n\n        if (self.isAnimating) {\n          return;\n        }\n\n        var done = function done() {\n          self.isAnimating = false;\n          $(window).off('scroll', scrollEvent);\n          $(window).unbind('scroll mousedown wheel DOMMouseScroll mousewheel keyup', scrollEvent);\n\n          if (self.bodyAndHeadEl.get(0).scrollTop === 0) {\n            return;\n          }\n        };\n\n        var scrollEvent = function scrollEvent(e) {\n          if (e.which > 0 || e.type == 'mousedown' || e.type == 'mousewheel') {\n            self.bodyAndHeadEl.stop();\n            done();\n          }\n        };\n\n        $(window).bind('scroll mousedown wheel DOMMouseScroll mousewheel keyup', scrollEvent);\n\n        clearTimeout(self.onScrollTimer);\n\n        self.isAnimating = true;\n\n        self.bodyAndHeadEl.stop().animate({\n          scrollTop: (Math.round(percentage) * self.windowHeight)\n        }, self.speed, function () {\n          return done();\n        });\n      }\n\n      $(window).bind('scroll', function() {\n        clearTimeout(self.onScrollTimer);\n\n        self.onScrollTimer = setTimeout(function () {\n          var currentScroll =  self.bodyAndHeadEl.scrollTop();\n          var currentPercentage = (currentScroll / self.windowHeight).toFixed(2);\n          centerOnSegment(currentPercentage);\n        }, self.wait);\n      });\n\n      $(window).bind('resize', function() {\n        onResize();\n      });\n    }\n\n    $.fn.centerify = function(options) {\n      return this.each(function() {\n        if (!$(this).data('centerify'))\n          $(this).data('centerify', new Centerify(this, options));\n      });\n    };\n  })();\n\n  // $('#index').centerify();\n\n  (function() {\n    function Drawify() {\n      var docElem = window.document.documentElement;\n      var $dots = $('#dots ul li');\n      var $body = $('body');\n\n      window.requestAnimFrame = function(){\n        return (\n          window.requestAnimationFrame     ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame  ||\n          window.oRequestAnimationFrame    ||\n          window.msRequestAnimationFrame   ||\n          function(/* function */ callback){\n            window.setTimeout(callback, 1000 / 60);\n          }\n        );\n      }();\n\n      window.cancelAnimFrame = function(){\n        return (\n          window.cancelAnimationFrame     ||\n          window.webkitCancelAnimationFrame ||\n          window.mozCancelAnimationFrame  ||\n          window.oCancelAnimationFrame    ||\n          window.msCancelAnimationFrame   ||\n          function(id){\n            window.clearTimeout(id);\n          }\n        );\n      }();\n\n      function SVGEl( el ) {\n        this.el = el;\n        this.image = this.el.previousElementSibling;\n        this.current_frame = 0;\n        this.total_frames = 120;\n        this.path = new Array();\n        this.length = new Array();\n        this.handle = 0;\n        this.init();\n      }\n\n      SVGEl.prototype.init = function() {\n        var self = this;\n        [].slice.call( this.el.querySelectorAll('path')).forEach( function(path, i) {\n          self.path[i] = path;\n          var l = self.path[i].getTotalLength();\n          self.length[i] = l;\n          self.path[i].style.strokeDasharray = l + ' ' + l;\n          self.path[i].style.strokeDashoffset = l;\n        } );\n      };\n\n      SVGEl.prototype.render = function() {\n        if( this.rendered ) return;\n        this.rendered = true;\n        this.draw();\n        $(this.el).next().addClass('animate');\n      };\n\n      SVGEl.prototype.draw = function() {\n        var self = this,\n          progress = this.current_frame/this.total_frames;\n        if (progress > 1) {\n          window.cancelAnimFrame(this.handle);\n          this.showImage();\n        } else {\n          this.current_frame++;\n          for(var j=0, len = this.path.length; j<len;j++){\n            this.path[j].style.strokeDashoffset = Math.floor(this.length[j] * (1 - progress));\n          }\n          this.handle = window.requestAnimFrame(function() { self.draw(); });\n        }\n      };\n\n      SVGEl.prototype.showImage = function() {\n        // console.log($(this.el));\n        // classie.add( this.image, 'show' );\n        // classie.add( this.el, 'hide' );\n      };\n\n      function getViewportH() {\n        var client = docElem['clientHeight'],\n          inner = window['innerHeight'];\n\n        if( client < inner )\n          return inner;\n        else\n          return client;\n      }\n\n      function getPageHeight() {\n        return Math.max($(document).height(), $(window).height());\n      }\n\n      function scrollY() {\n        return window.pageYOffset || docElem.scrollTop;\n      }\n\n      // http://stackoverflow.com/a/5598797/989439\n      function getOffset(el) {\n        var offsetTop = 0, offsetLeft = 0;\n        do {\n          if ( !isNaN( el.offsetTop ) ) {\n            offsetTop += el.offsetTop;\n          }\n          if ( !isNaN( el.offsetLeft ) ) {\n            offsetLeft += el.offsetLeft;\n          }\n        } while( el = el.offsetParent )\n\n        return {\n          top : offsetTop,\n          left : offsetLeft\n        };\n      }\n\n      function inViewport(el, h) {\n        var elH = el.offsetHeight,\n          scrolled = scrollY(),\n          viewed = scrolled + getViewportH(),\n          elTop = getOffset(el).top,\n          elBottom = elTop + elH,\n          // if 0, the element is considered in the viewport as soon as it enters.\n          // if 1, the element is considered in the viewport only when it's fully inside\n          // value in percentage (1 >= h >= 0)\n          h = h || 0.1;\n\n        return (elTop + elH * h) <= viewed && (elBottom) >= scrolled;\n      }\n\n      function highlightDot() {\n        var fullHeight = getPageHeight();\n        var viewportHeight = getViewportH();\n        var position = scrollY();\n        var fakePosition = position - (viewportHeight / 4);\n        var current = Math.max(Math.round(fakePosition * 4 / fullHeight), 0);\n        $dots.removeClass('active');\n        $dots.eq(current).addClass('active');\n      }\n\n      function init() {\n        var svgs = Array.prototype.slice.call(document.querySelectorAll('#index svg')),\n          svgArr = new Array(),\n          didScroll = false,\n          resizeTimeout;\n\n        // the svgs already shown...\n        svgs.forEach(function(el, i) {\n          var svg = new SVGEl(el);\n          svgArr[i] = svg;\n          setTimeout(function(el) {\n            return function() {\n              if(inViewport(el.parentNode)) {\n                svg.render();\n              }\n            };\n          }(el), 250);\n        });\n\n        highlightDot();\n\n        $dots.click(function() {\n          var fullHeight = getPageHeight();\n          var index = $dots.index(this);\n          $body.stop().animate({\n            scrollTop: Math.round((fullHeight / 4) * index)\n          }, 200);\n        });\n\n        var scrollHandler = function() {\n          if(!didScroll) {\n            didScroll = true;\n            setTimeout(function() { scrollPage(); }, 60);\n          }\n        };\n\n        var scrollPage = function() {\n          svgs.forEach(function(el, i) {\n            if(inViewport(el.parentNode, 0.5)) {\n              svgArr[i].render();\n            }\n          });\n          highlightDot();\n          didScroll = false;\n        };\n\n        var resizeHandler = function() {\n          function delayed() {\n            scrollPage();\n            resizeTimeout = null;\n          }\n          if (resizeTimeout) {\n            clearTimeout(resizeTimeout);\n          }\n          resizeTimeout = setTimeout(delayed, 200);\n        };\n\n        window.addEventListener( 'scroll', scrollHandler, false );\n        window.addEventListener( 'resize', resizeHandler, false );\n      }\n\n      init();\n    }\n\n    $.fn.drawify = function(options) {\n      return this.each(function() {\n        if (!$(this).data('drawify'))\n          $(this).data('drawify', new Drawify(this, options));\n      });\n    };\n  })();\n\n  $('#index').drawify();\n\n});\n"]}